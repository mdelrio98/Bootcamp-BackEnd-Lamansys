<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>ar.lamansys</groupId>
		<artifactId>backend</artifactId>
		<version>${revision}</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>api-rest</artifactId>
	<description>Aplicación API Rest</description>
	<packaging>${packaging.type}</packaging>

	<properties>
		<packaging.type>jar</packaging.type>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<start-class>ar.lamansys.app.App</start-class>
	</properties>

	<dependencies>

		<dependency>
			<groupId>ar.lamansys</groupId>
			<artifactId>cart</artifactId>
			<version>${revision}</version>
		</dependency>

		<dependency>
			<groupId>ar.lamansys</groupId>
			<artifactId>sgx-shared</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
		<!-- Provides everything you need to write JUnit 5 Jupiter tests. -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.7.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine -->
		<!-- Enables any legacy JUnit 3 and JUnit 4 tests you may have. Not needed for JUnit 5 tests. -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.7.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>war</id>
			<properties>
				<packaging.type>war</packaging.type>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.servlet</groupId>
					<artifactId>javax.servlet-api</artifactId>
					<version>4.0.1</version>
					<scope>provided</scope>
					
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>3.3.1</version>
						<configuration>
							<archive>
								<manifest>
									<mainClass>${start-class}</mainClass>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
							</archive>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
							-Amapstruct.defaultComponentModel=spring
						</compilerArg>
						<compilerArg>
							-Amapstruct.unmappedTargetPolicy=IGNORE
						</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- Plugin for creating a pom.properties file in the classpath -->
			<plugin>
				<groupId>com.internetitem</groupId>
				<artifactId>write-properties-file-maven-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>write-properties-file</goal>
						</goals>
						<configuration>
							<filename>pom.properties</filename>
							<properties>
								<property>
									<name>artifactId</name>
									<value>${project.artifactId}</value>
								</property>
								<property>
									<name>groupId</name>
									<value>${project.groupId}</value>
								</property>
								<property>
									<name>version</name>
									<value>${revision}</value>
								</property>
							</properties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.6.2</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<mainClass>${start-class}</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Plugin for creating a pom.properties file in the classpath -->
			<plugin>
				<groupId>com.internetitem</groupId>
				<artifactId>write-properties-file-maven-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>write-properties-file</goal>
						</goals>
						<configuration>
							<filename>pom.properties</filename>
							<properties>
								<property>
									<name>artifactId</name>
									<value>${project.artifactId}</value>
								</property>
								<property>
									<name>groupId</name>
									<value>${project.groupId}</value>
								</property>
								<property>
									<name>version</name>
									<value>${revision}</value>
								</property>
							</properties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Plugin para obtener información de git y generar el archivo git.properties -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<verbose>true</verbose>
					<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
				</configuration>
			</plugin>
			<plugin>
				<groupId>cz.habarta.typescript-generator</groupId>
				<artifactId>typescript-generator-maven-plugin</artifactId>
				<version>2.18.565</version>
				<executions>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>process-classes</phase>
					</execution>
				</executions>
				<configuration>
					<jsonLibrary>jackson2</jsonLibrary>
					<noFileComment>true</noFileComment>
					<sortDeclarations>true</sortDeclarations>
					<loggingLevel>Info</loggingLevel>
					<mapEnum>asEnum</mapEnum>
					<classPatterns>
						<pattern>ar.lamansys.**.dto.**Dto</pattern>
						<pattern>ar.lamansys.**.dto.**Enum</pattern>
					</classPatterns>
					<outputKind>module</outputKind>
					<outputFile>../../front-end/webapp/src/app/modules/api-rest/api-model.d.ts</outputFile>
					<optionalAnnotations>
						<annotation>javax.annotation.Nullable</annotation>
						<annotation>org.springframework.lang.Nullable</annotation>
					</optionalAnnotations>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
